#!/usr/bin/ruby

require 'date'
require 'digest/md5'
require 'erb'
require 'fileutils'
require 'rubygems'

PKGBUILD = %{# Generated by gem2arch
# Contributor: <%= username %> <<%= email %>>

_gemname=<%= gem_name %>
pkgname=ruby-$_gemname
pkgver=<%= gem_ver %>
pkgrel=1
pkgdesc="<%= description %>"
arch=('i686' 'x86_64')
url="<%= website %>"
license=('')
depends=('ruby'<%= depends %>)
makedepends=('rubygems')
source=(http://gems.rubyforge.org/gems/$_gemname-$pkgver.gem)
noextract=($_gemname-$pkgver.gem)
md5sums=('<%= md5sum %>')

build() {
  cd $srcdir
  local _gemdir="$(ruby -e'puts Gem.default_dir')"
  gem install --ignore-dependencies -i "$pkgdir$_gemdir" $_gemname-$pkgver.gem
}
}

def download(gem_name, gem_ver = nil)
  version = gem_ver || Gem::Requirement.default

  all = Gem::Requirement.default
  dep = Gem::Dependency.new gem_name, version

  specs_and_sources = Gem::SpecFetcher.fetcher.fetch dep, all

  specs_and_sources.sort_by { |spec,| spec.version }

  spec, source_uri = specs_and_sources.last

  if spec.nil? then
    $stderr.puts "Could not find #{gem_name} in any repository"
    exit 1
  end

  puts "Downloaded #{spec.full_name}"

  path = Gem::RemoteFetcher.fetcher.download spec, source_uri
  FileUtils.mv path, "#{spec.full_name}.gem"

  return spec
end

def calc_digest(file_name)
  md5sum = Digest::MD5.new
  file_size = File.size file_name

  File.open(file_name) do |f|
    while buf = f.read(1024)
      md5sum << buf
    end
  end

  return md5sum.to_s
end

def gen_pkgbuild(spec)
  gem_name = spec.name
  gem_ver = spec.version

  username = `whoami`.strip
  hostname = `hostname`.strip
  email = "#{username}@#{hostname}"

  website = spec.homepage
  description = spec.summary

  md5sum = calc_digest(spec.full_name + '.gem')

  depends = spec.runtime_dependencies
  depends = if depends.empty? then ""
  else
    ' ' + depends.map do |d|
      d.version_requirements.requirements.map do |comp, ver|
        comp = '>=' if comp == '~>'
        "'ruby-#{d.name}#{comp}#{ver}'"
      end
    end.join(" ")
  end

  return ERB.new(PKGBUILD).result(binding)
end

if $0 == __FILE__
  if ARGV.length < 1
    puts "Usage: #{$0} GEM_NAME [GEM_VER]"
    exit
  end

  spec = download *ARGV.take(2)

  {
    'PKGBUILD' => lambda {|s| gen_pkgbuild s }
  }.each do |file, gen_file|
    puts "Generate #{file} for ruby-#{spec.full_name}"
    File.open(file, 'w') {|f| f.write gen_file.call(spec) }
  end
end
